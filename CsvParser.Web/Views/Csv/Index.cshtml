@model List<CsvParser.Web.Models.CsvViewModel>

<div class="mt-5 text-center">
    <h1>Uploaded CSV Records</h1>
</div>

<form method="get" action="@Url.Action("Index", "Csv")" class="mb-3">
    <div class="row">
        <!-- Фільтрація -->
        <div class="col-md-4">
            <label for="name" class="form-label">Filter by Name:</label>
            <input type="text" id="name" name="name" value="@Context.Request.Query["name"]" class="form-control" placeholder="Enter name...">
        </div>

        <!-- Сортування -->
        <div class="col-md-3">
            <label for="orderBy" class="form-label">Sort by:</label>
            <select id="orderBy" name="orderBy" class="form-select">
                <option value="">-- Select --</option>
                <option value="Name" selected="@(Context.Request.Query["orderBy"] == "Name")">Name</option>
                <option value="BirthDate" selected="@(Context.Request.Query["orderBy"] == "BirthDate")">Birth Date</option>
                <option value="Salary" selected="@(Context.Request.Query["orderBy"] == "Salary")">Salary</option>
            </select>
        </div>

        <div class="col-md-2">
            <label for="sortDirection" class="form-label">Direction:</label>
            <select id="sortDirection" name="sortDirection" class="form-select">
                <option value="">-- Select --</option>
                <option value="Ascending" selected="@(Context.Request.Query["sortDirection"] == "Ascending")">Ascending</option>
                <option value="Descending" selected="@(Context.Request.Query["sortDirection"] == "Descending")">Descending</option>
            </select>
        </div>

        <!-- Пагінація -->
        <div class="col-md-2">
            <label for="pageSize" class="form-label">Page Size:</label>
            <select id="pageSize" name="pageSize" class="form-select">
                <option value="5" selected="@(Context.Request.Query["pageSize"] == "5")">5</option>
                <option value="10" selected="@(Context.Request.Query["pageSize"] == "10")">10</option>
                <option value="20" selected="@(Context.Request.Query["pageSize"] == "20")">20</option>
            </select>
        </div>
    </div>

    <div class="mt-3 text-end">
        <button type="submit" class="btn btn-primary">Apply Filters</button>
    </div>
</form>

<table class="table">
    <thead>
        <tr>
            <th>Name</th>
            <th>Date of Birth</th>
            <th>Married</th>
            <th>Phone</th>
            <th>Salary</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var csv in Model)
        {
            <tr>
                <td>@csv.Name</td>
                <td>@csv.BirthDate.ToShortDateString()</td>
                <td>@(csv.IsMarried ? "Yes" : "No")</td>
                <td>@csv.Phone</td>
                <td>@csv.Salary.ToString("C")</td>
                <td>
                    <a href="@Url.Action("Edit", "Csv", new { id = csv.Id })" class="btn btn-primary">Edit</a>
                    <form action="@Url.Action("Delete", "Csv", new { id = csv.Id })" method="post" style="display:inline;">
                        <input type="hidden" name="_method" value="DELETE" />
                        <button type="submit" class="btn btn-danger" onclick="return confirm('Are you sure?')">Delete</button>
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

<div class="d-flex justify-content-between align-items-center">
    <div>Total Records: @ViewBag.TotalCount</div>
    <nav>
        <ul class="pagination">
            @{
                int currentPage = int.TryParse(Context.Request.Query["page"], out var p) ? p : 1;
                int totalCount = ViewBag.TotalCount ?? 0;  // добавляем значение по умолчанию
                int pageSize = 10;
                _ = int.TryParse(Context.Request.Query["pageSize"], out pageSize);
                int totalPages = totalCount > 0 ? (int)Math.Ceiling((double)totalCount / pageSize) : 0;

                for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("Index", new { name = Context.Request.Query["name"], orderBy = Context.Request.Query["orderBy"], sortDirection = Context.Request.Query["sortDirection"], page = i, pageSize = Context.Request.Query["pageSize"] })">@i</a>
                    </li>
                }
            }
        </ul>
    </nav>
</div>
